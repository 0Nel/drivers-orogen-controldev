name "controldev"
version "0.0"

using_library "controldev"
using_toolkit "can"

import_types_from "ControlDevTypes.hpp"

task_context "GenericTask" do
    abstract

    # Minimum translation speed in m/s
    property "minSpeed", "double"
    # Maximum translation speed in m/s
    property "maxSpeed", "double"
    # Maximum rotation speed in rad/s
    property "maxRotationSpeed", "double"

    output_port("rawCommand", "controldev/RawCommand").
        doc("Port for raw command structures (composed of joystick and sliderbox values)")

	output_port("fourWheelCommand", "controldev/FourWheelCommand").
		doc("command that specifies the speed for the four wheels")

    output_port("motionCommand", "controldev/MotionCommand").
        doc("Port for motion command structures (translation, rotation)")
end

task_context "Local" do
    subclasses "GenericTask"

    fd_driven
    needs_configuration

    property("joystick_device", "/std/string", "/dev/input/js0").
        doc("Path to the joystick device")
end

task_context "Remote" do
    subclasses "GenericTask"

    needs_configuration

    input_port("canJoystick", "can/Message").
        doc("Input port for joystick messages from the CAN dispatcher module")

    input_port("canSliderBox", "can/Message").
        doc("Input port for slider box messages from the CAN dispatcher module")
    port_driven 'canJoystick', 'canSliderBox'
end

deployment "test_controldev" do
    do_not_install
    local = task("local", "Local").realtime
    remote = task("remote", "Remote").realtime

    add_default_logger
    if !corba_enabled?
        browse local
    end
end
